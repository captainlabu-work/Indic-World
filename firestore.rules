rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      // Anyone authenticated can read user documents
      allow read: if isAuthenticated();

      // Users can create their own document during signup
      allow create: if isAuthenticated() &&
                      request.auth.uid == request.resource.data.uid;

      // Users can update their own document
      allow update: if isOwner(resource.data.uid) || isAdmin();

      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Articles collection rules
    match /articles/{articleId} {
      // Anyone can read published articles
      allow read: if resource.data.status == 'published' ||
                    isAuthenticated();

      // Authenticated users can create articles
      allow create: if isAuthenticated() &&
                      request.resource.data.authorId == request.auth.uid;

      // Authors can update their own articles, admins can update any
      allow update: if isOwner(resource.data.authorId) || isAdmin();

      // Authors can delete their own articles, admins can delete any
      allow delete: if isOwner(resource.data.authorId) || isAdmin();
    }
  }
}
